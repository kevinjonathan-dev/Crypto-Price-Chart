{"version":3,"sources":["utils/numberWithCommas.ts","hooks/useQueryPrices.ts","hooks/useQueryWallets.ts","components/PlaceholderChart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["numberWithCommas","x","String","replace","_fetch","key","currencyGroup","interval","Axios","request","method","url","toLowerCase","baseURL","params","CustomizedLabel","y","value","stroke","dataMax","dataMin","index","setActiveIndexMax","setActiveIndexMin","activeIndexMax","activeIndexMin","fill","dy","fontSize","textAnchor","undefined","PlaceholderChart","useState","setInterval","tokens","setIndex","setCurrencyGroup","data","setData","useQuery","fetchedData","isLoading","price","payload","setPayload","useEffect","length","chart","map","item","Number","close","block","reverse","className","style","height","width","textShadow","border","marginLeft","borderRadius","boxShadow","onClick","color","mixBlendMode","backgroundColor","padding","Date","toDateString","slice","toTimeString","margin","right","top","axisLine","dataKey","tick","type","allowDataOverflow","domain","activeDot","e","label","Math","max","min","dot","strokeWidth","r","ButtonStyles","display","fontWeight","flex","App","paddingTop","minHeight","window","innerHeight","innerWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90cd2e73.chunk.js","sourcesContent":["export default function numberWithCommas(x) {\n  return String(x).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n}\n","import Axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nexport type Interval = \"hour\" | \"day\" | \"week\" | \"month\" | \"year\" | \"all\";\n\ntype PricePoint = {\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  block: number;\n};\ntype Params = {\n  currencyGroup: string;\n  interval: Interval;\n};\n\ntype Result = {\n  code: string;\n  message: string;\n  payload: {\n    chart: PricePoint[];\n  };\n};\n\nconst _fetch = (key: string, { currencyGroup, interval }: Params) => {\n  return Axios.request<Result>({\n    method: \"GET\",\n    url: `/trade/chart/${currencyGroup.toLowerCase()}`,\n    baseURL: \"https://cors-anywhere.herokuapp.com/https://api.pintu.co.id/v1\",\n    params: {\n      interval,\n    },\n  });\n};\n\nexport default function useQueryPrices(params: Params) {\n  return useQuery([\"prices\", params], _fetch);\n}\n","import Axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\ntype Params = {};\n\ntype Result = {\n  code: string;\n  message: string;\n  payload: Wallet[];\n};\n\nexport type WalletChild = {\n  currencyGroup: string;\n  tokenSymbol: string;\n  decimal_point: number;\n  tokenType: string;\n  blockchain: string;\n  explorer: string;\n};\n\nexport type Wallet = {\n  currencyGroup: string;\n  color: string;\n  currencySymbol: string;\n  name: string;\n  logo: string;\n  decimal_point: number;\n  wallets: WalletChild[];\n};\n\nconst _fetch = () => {\n  return Axios.request<Result>({\n    method: \"get\",\n    baseURL:\n      \"https://cors-anywhere.herokuapp.com/https://api.pintukripto.com/v1/\",\n    url: \"/wallet/supportedCurrencies\",\n  });\n};\n\nexport default function useQueryWallets() {\n  return useQuery(\"wallets\", _fetch);\n}\n","/* tslint:disable */\n/* eslint no-unused-expressions:0 */\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport numberWithCommas from \"../utils/numberWithCommas\";\nimport useQueryPrices, { Interval } from \"../hooks/useQueryPrices\";\nimport timeConverter from \"../utils/timeConverter\";\nimport useQueryWallets from \"../hooks/useQueryWallets\";\nimport {\n  ReferenceDot,\n  ReferenceLine,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\ninterface fetchedData {\n  data: {\n    payload: {};\n  };\n}\ninterface payload {\n  price: number;\n  key: number;\n}\ninterface labelProps {\n  x?: any;\n  y?: any;\n  stroke?: any;\n  value?: any;\n  dataMax?: any;\n  dataMin?: any;\n  index?: any;\n  setActiveIndexMax?: any;\n  setActiveIndexMin?: any;\n  activeIndexMax?: any;\n  activeIndexMin?: any;\n  fill?: any;\n}\nconst CustomizedLabel = ({\n  x,\n  y,\n  stroke,\n  value,\n  dataMax,\n  dataMin,\n  index,\n  setActiveIndexMax,\n  setActiveIndexMin,\n  activeIndexMax,\n  activeIndexMin,\n  fill,\n}: labelProps) => {\n  value == dataMax ? setActiveIndexMax(index) : undefined;\n  value == dataMin ? setActiveIndexMin(index) : undefined;\n  return (\n    <text\n      x={x}\n      y={y}\n      dy={value == dataMax ? -10 : 25}\n      fill={fill}\n      fontSize={16}\n      textAnchor=\"middle\"\n    >\n      {(value == dataMax || value == dataMin) &&\n      (index == activeIndexMax || index == activeIndexMin)\n        ? \"Rp. \" + numberWithCommas(value)\n        : undefined}\n    </text>\n  );\n};\n\nexport default function PlaceholderChart() {\n  const [interval, setInterval] = useState<Interval>(\"hour\");\n  let tokens = [\n    \"BTC\",\n    \"ETH\",\n    \"USDT\",\n    \"BNB\",\n    \"COMP\",\n    \"LINK\",\n    \"SNX\",\n    \"YFI\",\n    \"UNI\",\n    \"MKR\",\n  ];\n  let tokens2 = [\n    \"Bitcoin\",\n    \"Ethereum\",\n    \"USD Token\",\n    \"Binance Coin\",\n    \"Compound\",\n    \"Chainlink\",\n    \"Synthetix\",\n    \"Yearn Finance\",\n    \"Uniswap\",\n    \"Maker\",\n  ];\n  let intervals: Interval[] = [\"hour\", \"day\", \"week\", \"month\", \"year\", \"all\"];\n  const [activeIndexMax, setActiveIndexMax] = useState(null);\n  const [activeIndexMin, setActiveIndexMin] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [sortedData, setSortedData] = useState([]);\n  const [currencyGroup, setCurrencyGroup] = useState(tokens[index]);\n  const [data, setData] = useState([{}]);\n  const { data: fetchedData, isLoading } = useQueryPrices({\n    currencyGroup: currencyGroup,\n    interval: interval,\n  });\n  const { data: wallets, isLoading: isLoading2 } = useQueryWallets();\n  const [payload, setPayload] = useState<payload>({ price: 0, key: 0 });\n  const customMouseOver = (e: any) => {\n    setPayload(e.payload);\n  };\n  useEffect(() => {\n    index == tokens.length ? setIndex(0) : undefined;\n    if (!isLoading) {\n      setData(\n        fetchedData!.data.payload.chart\n          .map((item, index) => {\n            return {\n              price: Number(item.close),\n              key: item.block,\n            };\n          })\n          .reverse()\n      );\n    }\n  }, [isLoading, interval, payload]);\n\n  return (\n    <div\n      className=\"flexDirCol contentCenterCenter\"\n      style={{ height: \"100%\", width: \"100%\" }}\n    >\n      <h1 style={{ textShadow: \"5px 5px 7px rgba(0,0,0,0.5)\" }}>\n        Cryptocurrency Dynamic Price Chart (Squire Portfolio)\n      </h1>\n      <p className=\"man mbxs\">\n        Click on the cryptocurrency or interval button below to change.\n      </p>\n      <p className=\"man mbxs\">\n        *Note: Due to limited server processing capabilities and the usage of\n        proxy to allow CORS, API calls may take a while to load.\n      </p>\n      <div className=\"flexDirRow contentCenterCenter w100\">\n        <h2>Price of</h2>\n        <button\n          className=\"phm\"\n          style={{\n            border: \"none\",\n            marginLeft: \"10px\",\n            borderRadius: \"25px\",\n            boxShadow: \"5px 5px 7px rgba(0,0,0,0.5)\",\n          }}\n          onClick={() => {\n            setIndex(index + 1);\n            setCurrencyGroup(tokens[index]);\n          }}\n        >\n          <h2\n            style={{\n              color: \"black\",\n              mixBlendMode: \"multiply\",\n            }}\n          >\n            {tokens2[index]}\n          </h2>\n        </button>\n      </div>\n      <h2\n        style={{\n          backgroundColor: \"white\",\n          color: \"black\",\n          mixBlendMode: \"screen\",\n          padding: \"5px\",\n          borderRadius: \"5px\",\n          textShadow: \"5px 5px 7px rgba(0,0,0,0.5)\",\n        }}\n      >\n        Rp. {numberWithCommas(payload.price)} -{\" \"}\n        {new Date(payload.key * 1000).toDateString().slice(4) +\n          \" \" +\n          new Date(payload.key * 1000).toTimeString().slice(0, 5)}\n      </h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {!isLoading ? (\n          <LineChart data={data} margin={{ right: 50, top: 30 }}>\n            <XAxis axisLine={false} dataKey=\"key\" tick={false} />\n            <YAxis\n              axisLine={false}\n              tick={false}\n              type=\"number\"\n              allowDataOverflow={false}\n              domain={[\"dataMin\", \"dataMax\"]}\n            />\n            <Tooltip />\n\n            <Line\n              activeDot={customMouseOver}\n              label={\n                <CustomizedLabel\n                  fill={\"white\"}\n                  setActiveIndexMax={setActiveIndexMax}\n                  setActiveIndexMin={setActiveIndexMin}\n                  activeIndexMax={activeIndexMax}\n                  activeIndexMin={activeIndexMin}\n                  dataMax={Math.max(\n                    ...fetchedData!.data.payload.chart.map((item) =>\n                      Number(item.close)\n                    )\n                  )}\n                  dataMin={Math.min(\n                    ...fetchedData!.data.payload.chart.map((item) =>\n                      Number(item.close)\n                    )\n                  )}\n                />\n              }\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"price\"\n              stroke=\"white\"\n              strokeWidth=\"2px\"\n            />\n            <ReferenceLine x={payload.key} stroke=\"lightgreen\" />\n            <ReferenceDot\n              y={payload.price}\n              x={payload.key}\n              fill=\"lightgreen\"\n              stroke=\"white\"\n              strokeWidth={1}\n              r={8}\n            />\n          </LineChart>\n        ) : (\n          <div />\n        )}\n      </ResponsiveContainer>\n      <div className=\"flexDirRow w80 contentCenterCenter\">\n        {intervals.map((item) => (\n          <button\n            onClick={() => setInterval(item)}\n            className=\"contentCenterCenter mhxs \"\n            style={ButtonStyles}\n          >\n            <p>{item}</p>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst ButtonStyles = {\n  backgroundColor: \"white\",\n  border: \"none\",\n  display: \"flex\",\n  fontWeight: 700,\n  flex: 1,\n  borderRadius: \"5px\",\n  color: \"#343a40\",\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport PlaceholderChart from \"./components/PlaceholderChart\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div\n      className=\"contentCenterCenter flexDirCol grabackground\"\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n      }}\n    >\n      <div\n        style={{\n          boxShadow: \"15px 15px 15px rgba(0,0,0,0.5)\",\n          padding: \"8%\",\n          paddingTop: \"3%\",\n          minHeight: window.innerHeight > window.innerWidth ? \"80vh\" : \"200px\",\n        }}\n        className=\"grabient flex maxl contentCenterCenter white w80 vh65 flexDirCol braxl\"\n      >\n        <PlaceholderChart />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}